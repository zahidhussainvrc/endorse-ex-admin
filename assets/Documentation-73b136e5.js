import{_ as s,o as i,f as o,C as t,p as n,j as r,g as e}from"./index-06b50a94.js";const f={},d=a=>(n("data-v-9bff2836"),a=a(),r(),a),p={class:"card"},l=t('<h3 data-v-9bff2836>Documentation</h3><p class="bg-primary border-round p-3" data-v-9bff2836>This page covers the Vite version, for Nuxt 3 visit the <a href="https://github.com/primefaces/sakai-nuxt" class="font-bold bg-primary hover:underline" data-v-9bff2836>sakai-nuxt</a> repository instead.</p><h5 data-v-9bff2836>Getting Started</h5><p data-v-9bff2836> Sakai is an application template for Vue based on the <a href="https://github.com/vuejs/create-vue" class="font-medium text-primary hover:underline" data-v-9bff2836>create-vue</a>, the recommended way to start a <strong data-v-9bff2836>Vite-powered</strong> Vue projects. To get started, clone the <a href="https://github.com/primefaces/sakai-vue" class="font-medium text-primary hover:underline" data-v-9bff2836>repository</a> from GitHub and install the dependencies with npm or yarn. </p><pre class="app-code" data-v-9bff2836><code data-v-9bff2836> npm install </code></pre><p data-v-9bff2836>or</p><pre class="app-code" data-v-9bff2836><code data-v-9bff2836> yarn </code></pre><p data-v-9bff2836>Next step is running the application using the serve script and navigate to <i data-v-9bff2836>http://localhost:5173/</i> to view the application. That is it, you may now start with the development of your application using the Sakai template.</p><pre class="app-code" data-v-9bff2836><code data-v-9bff2836> npm run dev </code></pre><h5 data-v-9bff2836>Structure</h5><p data-v-9bff2836>Sakai consists of a couple folders, demos and layout have been separated so that you can easily remove what is not necessary for your application.</p><ul class="line-height-3" data-v-9bff2836><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>src/layout</span>: Main layout files, needs to be present</li><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>src/views</span>: Demo pages</li><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>public/demo</span>: Assets used in demos</li><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>public/layout</span>: Assets used in layout</li><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>src/assets/demo</span>: Styles used in demos</li><li data-v-9bff2836><span class="text-primary font-medium" data-v-9bff2836>src/assets/layout</span>: SCSS files of the main layout</li></ul><h5 data-v-9bff2836>Menu</h5><p data-v-9bff2836>Main menu is defined at <span class="text-primary font-medium" data-v-9bff2836>src/layout/AppMenu.vue</span> file.</p><h5 data-v-9bff2836>Integration with Existing Vite Applications</h5><p data-v-9bff2836>Only the folders that are related to the layout needs to move in to your project. We&#39;ve created a short tutorial with details.</p>',16),c=d(()=>e("div",{class:"video-container"},[e("iframe",{className:"video",width:"560",height:"315",src:"https://www.youtube.com/embed/AHeSjJFR3ZE",frameborder:"0",allowfullscreen:""})],-1)),u=t(`<h5 data-v-9bff2836>PrimeVue Theme</h5><p data-v-9bff2836>Sakai theming is based on the PrimeVue theme being used. Default theme is <b data-v-9bff2836>lara-light-indigo</b>.</p><h5 data-v-9bff2836>SASS Variables</h5><p data-v-9bff2836>In case you&#39;d like to customize the main layout variables, open <b data-v-9bff2836>_variables.scss</b> file under src/layout folder. Saving the changes will be reflected instantly at your browser.</p><h6 data-v-9bff2836>src/layout/_variables.scss</h6><pre class="app-code" data-v-9bff2836>            
 /* General */
 <br data-v-9bff2836>
 $scale:14px; /* main font size */
 <br data-v-9bff2836>
 $borderRadius:12px; /* border radius of layout element e.g. card, sidebar */
 <br data-v-9bff2836>
 $transitionDuration:.2s; /* transition duration of layout elements e.g. sidebar, overlay menus */
        </pre>`,6),b=[l,c,u];function v(a,h){return i(),o("div",p,b)}const y=s(f,[["render",v],["__scopeId","data-v-9bff2836"]]);export{y as default};
